<?xml version="1.0" encoding="UTF-8"?>

<configuration debug="true">

    <property name="log.path" value="logs"/>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>%yellow(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger) - %cyan(%msg%n)
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- info 日志-->
    <appender name="info_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!-- 如果命中ERROR就禁止这条日志 -->
            <onMatch>DENY</onMatch>
            <!-- 如果没有命中就使用这条规则 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <!-- 通过rollingPolicy设置日志滚动的策略，这是使用按照时间滚动  TimeBasedRollingPolicy -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.path}/log-%d{yyyy-MM-dd-HH}.log</FileNamePattern>
            <!--日志每天生成24个log文件 大概保留3天-->
            <MaxHistory>100</MaxHistory>
        </rollingPolicy>
        <!-- 通过encoder指定日志的生成格式,每个appender的日志格式都可以自定义，不用相同 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- error 日志-->
    <appender name="error_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- ThresholdFilter过滤低于指定阈值的事件。 对于等于或高于阈值的事件，ThresholdFilter将在调用其decision（）方法时响应NEUTRAL。 但是，将拒绝级别低于阈值的事件 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 低于ERROR级别的日志（debug,info）将被拒绝，等于或者高于ERROR的级别将相应NEUTRAL -->
            <level>ERROR</level>
        </filter>
        <!-- 通过rollingPolicy设置日志滚动的策略，这是使用按照时间滚动  TimeBasedRollingPolicy -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.path}/error-log-%d{yyyy-MM-dd-HH}.log</FileNamePattern>
            <!--日志每天生成24个log文件 大概保留3天-->
            <MaxHistory>100</MaxHistory>
        </rollingPolicy>
        <!-- 通过encoder指定日志的生成格式,每个appender的日志格式都可以自定义，不用相同 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <root level="INFO">
        <!--<appender-ref ref="ASYNC"/>-->
        <appender-ref ref="info_log"/>
        <appender-ref ref="error_log"/>
        <appender-ref ref="console"/>
    </root>
</configuration>